from flask import Flask, jsonify
import requests
from bs4 import BeautifulSoup

app = Flask(__name__)

def get_coin_desk_headlines():
    url = "https://www.coindesk.com/"
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
    }
    try:
        response = requests.get(url, headers=headers)
        response.raise_for_status()
        soup = BeautifulSoup(response.text, "html.parser")

        headline_classes = [
            "font-Noto_Sans text-2xl font-bold",
            "font-Noto_Sans text-base font-bold xl:text-xl",
            "font-Noto_Sans text-sm font-semibold lg:text-base lg:font-bold"
        ]

        headlines = []
        for cls in headline_classes:
            for article in soup.find_all("h3", class_=cls):
                headline = article.get_text(strip=True)
                if headline:
                    headlines.append(headline)

        return headlines
    except requests.exceptions.RequestException as e:
        return [f"Error: {e}"]

def get_latest_crypto_news_headlines():
    url = "https://www.coindesk.com/latest-crypto-news"
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
    }
    try:
        response = requests.get(url, headers=headers)
        response.raise_for_status()
        soup = BeautifulSoup(response.text, "html.parser")

        headline_class = (
            "font-Noto_Sans text-base font-bold lg:text-xl lg:font-semibold leading-6 "
            "lg:leading-[1.875rem] tracking-[0.00938rem]"
        )

        headlines = []
        for article in soup.find_all("h3", class_=headline_class):
            headline = article.get_text(strip=True)
            if headline:
                headlines.append(headline)

        return headlines
    except requests.exceptions.RequestException as e:
        return [f"Error: {e}"]

@app.route("/")
def home():
    return "Crypto Scraper API is running!"

@app.route("/headlines")
def get_headlines():
    return jsonify({
        "homepage_headlines": get_coin_desk_headlines(),
        "crypto_news_headlines": get_latest_crypto_news_headlines()
    })

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)
